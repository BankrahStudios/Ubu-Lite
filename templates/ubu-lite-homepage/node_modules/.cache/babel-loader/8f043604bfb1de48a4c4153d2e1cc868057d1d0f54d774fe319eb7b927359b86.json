{"ast":null,"code":"import React,{useState}from'react';import{loadStripe}from'@stripe/stripe-js';import{Elements,CardElement,useStripe,useElements}from'@stripe/react-stripe-js';import{postJSON,getJSON}from'../api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CheckoutForm=_ref=>{let{clientSecret}=_ref;const stripe=useStripe();const elements=useElements();const[loading,setLoading]=useState(false);const handleSubmit=async e=>{e.preventDefault();if(!stripe||!elements)return;setLoading(true);const card=elements.getElement(CardElement);const{error,paymentIntent}=await stripe.confirmCardPayment(clientSecret,{payment_method:{card}});setLoading(false);if(error){alert('Payment error: '+error.message);}else{alert('Payment succeeded: '+(paymentIntent===null||paymentIntent===void 0?void 0:paymentIntent.id));}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(CardElement,{}),/*#__PURE__*/_jsx(\"button\",{disabled:!stripe||loading,style:{marginTop:12},className:\"btn\",children:\"Pay\"})]});};const Checkout=()=>{const[clientSecret,setClientSecret]=useState(null);const[publishableKey,setPublishableKey]=useState(null);const start=async()=>{// Ensure demo user and demo order exist (call existing demo endpoints)\ntry{await postJSON('/auth/register/',{username:'demo_buyer',password:'DemoPass123!',role:'client',email:'demo@local'});}catch(e){}const tokenResp=await postJSON('/auth/login/',{username:'demo_buyer',password:'DemoPass123!'});const token=tokenResp&&tokenResp.access;if(!token){alert('Login failed');return;}// create demo order by fetching services\nconst services=await getJSON('/services/');if(!services.length){alert('No services');return;}const svc=services[0];const order=await postJSON('/orders/',{service:svc.id,instructions:'Checkout demo'},token);// create payment intent\nconst pi=await postJSON('/payments/create-intent/',{order:order.id},token);setClientSecret(pi.client_secret);// fetch publishable key\nconst key=await getJSON('/payments/publishable-key/');setPublishableKey(key.publishableKey||'');};if(!clientSecret||!publishableKey)return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Checkout demo\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Click start to create a demo order and payment intent.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:start,className:\"btn\",children:\"Start demo checkout\"})]});const stripePromise=loadStripe(publishableKey||'');return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Complete payment\"}),/*#__PURE__*/_jsx(Elements,{stripe:stripePromise,options:{clientSecret},children:/*#__PURE__*/_jsx(CheckoutForm,{clientSecret:clientSecret})})]});};export default Checkout;","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","postJSON","getJSON","jsx","_jsx","jsxs","_jsxs","CheckoutForm","_ref","clientSecret","stripe","elements","loading","setLoading","handleSubmit","e","preventDefault","card","getElement","error","paymentIntent","confirmCardPayment","payment_method","alert","message","id","onSubmit","children","disabled","style","marginTop","className","Checkout","setClientSecret","publishableKey","setPublishableKey","start","username","password","role","email","tokenResp","token","access","services","length","svc","order","service","instructions","pi","client_secret","key","padding","onClick","stripePromise","options"],"sources":["C:/Users/Kojos/OneDrive/Desktop/Ubu-Lite/templates/ubu-lite-homepage/src/pages/Checkout.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { postJSON, getJSON } from '../api';\r\n\r\nconst CheckoutForm: React.FC<{ clientSecret: string }> = ({ clientSecret }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!stripe || !elements) return;\r\n    setLoading(true);\r\n    const card = elements.getElement(CardElement)!;\r\n    const { error, paymentIntent } = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: { card }\r\n    });\r\n    setLoading(false);\r\n    if (error) {\r\n      alert('Payment error: ' + error.message);\r\n    } else {\r\n      alert('Payment succeeded: ' + paymentIntent?.id);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <CardElement />\r\n      <button disabled={!stripe || loading} style={{ marginTop: 12 }} className=\"btn\">Pay</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Checkout: React.FC = () => {\r\n  const [clientSecret, setClientSecret] = useState<string | null>(null);\r\n  const [publishableKey, setPublishableKey] = useState<string | null>(null);\r\n\r\n  const start = async () => {\r\n    // Ensure demo user and demo order exist (call existing demo endpoints)\r\n    try {\r\n      await postJSON('/auth/register/', { username: 'demo_buyer', password: 'DemoPass123!', role: 'client', email: 'demo@local' });\r\n    } catch (e) {}\r\n    const tokenResp = await postJSON('/auth/login/', { username: 'demo_buyer', password: 'DemoPass123!' });\r\n    const token = tokenResp && tokenResp.access;\r\n    if (!token) { alert('Login failed'); return; }\r\n\r\n    // create demo order by fetching services\r\n    const services = await getJSON('/services/');\r\n    if (!services.length) { alert('No services'); return; }\r\n    const svc = services[0];\r\n    const order = await postJSON('/orders/', { service: svc.id, instructions: 'Checkout demo' }, token);\r\n\r\n    // create payment intent\r\n    const pi = await postJSON('/payments/create-intent/', { order: order.id }, token);\r\n    setClientSecret(pi.client_secret);\r\n\r\n    // fetch publishable key\r\n    const key = await getJSON('/payments/publishable-key/');\r\n    setPublishableKey(key.publishableKey || '');\r\n  };\r\n\r\n  if (!clientSecret || !publishableKey) return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>Checkout demo</h2>\r\n      <p>Click start to create a demo order and payment intent.</p>\r\n      <button onClick={start} className=\"btn\">Start demo checkout</button>\r\n    </div>\r\n  );\r\n\r\n  const stripePromise = loadStripe(publishableKey || '');\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h2>Complete payment</h2>\r\n      <Elements stripe={stripePromise} options={{ clientSecret }}>\r\n        <CheckoutForm clientSecret={clientSecret} />\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}