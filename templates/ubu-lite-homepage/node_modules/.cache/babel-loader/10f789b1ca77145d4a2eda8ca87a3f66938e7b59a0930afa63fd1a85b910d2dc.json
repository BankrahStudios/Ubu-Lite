{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kojos\\\\OneDrive\\\\Desktop\\\\Ubu-Lite\\\\templates\\\\ubu-lite-homepage\\\\src\\\\components\\\\GoogleSignIn.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { setToken, setUser } from '../auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GoogleSignIn = ({\n  role,\n  onSuccessRedirect = '/studio',\n  text = 'continue_with'\n}) => {\n  _s();\n  const btnRef = useRef(null);\n  const [clientId, setClientId] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function ensureScript() {\n      // fetch client id from backend\n      try {\n        const r = await fetch('/api/auth/google/client-id/');\n        const j = await r.json();\n        if (!j.client_id) {\n          setError('Google client ID not configured');\n          return;\n        }\n        setClientId(j.client_id);\n      } catch {\n        setError('Failed to load Google config');\n        return;\n      }\n      if (document.getElementById('gsi-script')) return;\n      const s = document.createElement('script');\n      s.id = 'gsi-script';\n      s.src = 'https://accounts.google.com/gsi/client';\n      s.async = true;\n      s.defer = true;\n      document.head.appendChild(s);\n    }\n    ensureScript();\n  }, []);\n  useEffect(() => {\n    if (!clientId) return;\n    function init() {\n      if (!window.google || !btnRef.current) return;\n      window.google.accounts.id.initialize({\n        client_id: clientId,\n        callback: async resp => {\n          if (!(resp !== null && resp !== void 0 && resp.credential)) return;\n          try {\n            const r2 = await fetch('/api/auth/google/', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                credential: resp.credential,\n                role\n              })\n            });\n            const j2 = await r2.json();\n            if (!r2.ok || !j2.access) throw new Error(j2.detail || 'Google login failed');\n            setToken(j2.access);\n            if (j2.user) setUser(j2.user);\n            window.location.href = onSuccessRedirect;\n          } catch (e) {\n            setError(e.message || 'Google login failed');\n          }\n        }\n      });\n      window.google.accounts.id.renderButton(btnRef.current, {\n        theme: 'outline',\n        size: 'large',\n        text,\n        shape: 'pill'\n      });\n    }\n    const t = setInterval(() => {\n      if (window.google) {\n        clearInterval(t);\n        init();\n      }\n    }, 100);\n    return () => clearInterval(t);\n  }, [clientId, role, onSuccessRedirect, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: btnRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-red-600\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleSignIn, \"qg5zBQa0bLgAN/6cmvDgkMvt6Vg=\");\n_c = GoogleSignIn;\nexport default GoogleSignIn;\nvar _c;\n$RefreshReg$(_c, \"GoogleSignIn\");","map":{"version":3,"names":["React","useEffect","useRef","useState","setToken","setUser","jsxDEV","_jsxDEV","GoogleSignIn","role","onSuccessRedirect","text","_s","btnRef","clientId","setClientId","error","setError","ensureScript","r","fetch","j","json","client_id","document","getElementById","s","createElement","id","src","async","defer","head","appendChild","init","window","google","current","accounts","initialize","callback","resp","credential","r2","method","headers","body","JSON","stringify","j2","ok","access","Error","detail","user","location","href","e","message","renderButton","theme","size","shape","t","setInterval","clearInterval","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/Kojos/OneDrive/Desktop/Ubu-Lite/templates/ubu-lite-homepage/src/components/GoogleSignIn.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { setToken, setUser } from '../auth';\n\ndeclare global {\n  interface Window {\n    google?: any;\n  }\n}\n\ntype Props = {\n  role?: 'creative' | 'client';\n  onSuccessRedirect?: string;\n  text?: 'signin_with' | 'signup_with' | 'continue_with' | 'sign_in_with';\n};\n\nexport const GoogleSignIn: React.FC<Props> = ({ role, onSuccessRedirect = '/studio', text = 'continue_with' }) => {\n  const btnRef = useRef<HTMLDivElement>(null);\n  const [clientId, setClientId] = useState<string | null>(null);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    async function ensureScript() {\n      // fetch client id from backend\n      try {\n        const r = await fetch('/api/auth/google/client-id/');\n        const j = await r.json();\n        if (!j.client_id) {\n          setError('Google client ID not configured');\n          return;\n        }\n        setClientId(j.client_id);\n      } catch {\n        setError('Failed to load Google config');\n        return;\n      }\n\n      if (document.getElementById('gsi-script')) return;\n      const s = document.createElement('script');\n      s.id = 'gsi-script';\n      s.src = 'https://accounts.google.com/gsi/client';\n      s.async = true;\n      s.defer = true;\n      document.head.appendChild(s);\n    }\n    ensureScript();\n  }, []);\n\n  useEffect(() => {\n    if (!clientId) return;\n    function init() {\n      if (!window.google || !btnRef.current) return;\n      window.google.accounts.id.initialize({\n        client_id: clientId,\n        callback: async (resp: any) => {\n          if (!resp?.credential) return;\n          try {\n            const r2 = await fetch('/api/auth/google/', {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ credential: resp.credential, role }),\n            });\n            const j2 = await r2.json();\n            if (!r2.ok || !j2.access) throw new Error(j2.detail || 'Google login failed');\n            setToken(j2.access);\n            if (j2.user) setUser(j2.user);\n            window.location.href = onSuccessRedirect;\n          } catch (e: any) {\n            setError(e.message || 'Google login failed');\n          }\n        },\n      });\n      window.google.accounts.id.renderButton(btnRef.current, {\n        theme: 'outline',\n        size: 'large',\n        text,\n        shape: 'pill',\n      });\n    }\n    const t = setInterval(() => {\n      if (window.google) {\n        clearInterval(t);\n        init();\n      }\n    }, 100);\n    return () => clearInterval(t);\n  }, [clientId, role, onSuccessRedirect, text]);\n\n  return (\n    <div>\n      <div ref={btnRef} />\n      {error && <div className=\"mt-2 text-xs text-red-600\">{error}</div>}\n    </div>\n  );\n};\n\nexport default GoogleSignIn;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,QAAQ,EAAEC,OAAO,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAc5C,OAAO,MAAMC,YAA6B,GAAGA,CAAC;EAAEC,IAAI;EAAEC,iBAAiB,GAAG,SAAS;EAAEC,IAAI,GAAG;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAChH,MAAMC,MAAM,GAAGX,MAAM,CAAiB,IAAI,CAAC;EAC3C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAgB,IAAI,CAAC;EAC7D,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAgB,IAAI,CAAC;EAEvDF,SAAS,CAAC,MAAM;IACd,eAAeiB,YAAYA,CAAA,EAAG;MAC5B;MACA,IAAI;QACF,MAAMC,CAAC,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QACpD,MAAMC,CAAC,GAAG,MAAMF,CAAC,CAACG,IAAI,CAAC,CAAC;QACxB,IAAI,CAACD,CAAC,CAACE,SAAS,EAAE;UAChBN,QAAQ,CAAC,iCAAiC,CAAC;UAC3C;QACF;QACAF,WAAW,CAACM,CAAC,CAACE,SAAS,CAAC;MAC1B,CAAC,CAAC,MAAM;QACNN,QAAQ,CAAC,8BAA8B,CAAC;QACxC;MACF;MAEA,IAAIO,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,EAAE;MAC3C,MAAMC,CAAC,GAAGF,QAAQ,CAACG,aAAa,CAAC,QAAQ,CAAC;MAC1CD,CAAC,CAACE,EAAE,GAAG,YAAY;MACnBF,CAAC,CAACG,GAAG,GAAG,wCAAwC;MAChDH,CAAC,CAACI,KAAK,GAAG,IAAI;MACdJ,CAAC,CAACK,KAAK,GAAG,IAAI;MACdP,QAAQ,CAACQ,IAAI,CAACC,WAAW,CAACP,CAAC,CAAC;IAC9B;IACAR,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd,IAAI,CAACa,QAAQ,EAAE;IACf,SAASoB,IAAIA,CAAA,EAAG;MACd,IAAI,CAACC,MAAM,CAACC,MAAM,IAAI,CAACvB,MAAM,CAACwB,OAAO,EAAE;MACvCF,MAAM,CAACC,MAAM,CAACE,QAAQ,CAACV,EAAE,CAACW,UAAU,CAAC;QACnChB,SAAS,EAAET,QAAQ;QACnB0B,QAAQ,EAAE,MAAOC,IAAS,IAAK;UAC7B,IAAI,EAACA,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEC,UAAU,GAAE;UACvB,IAAI;YACF,MAAMC,EAAE,GAAG,MAAMvB,KAAK,CAAC,mBAAmB,EAAE;cAC1CwB,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE;gBAAE,cAAc,EAAE;cAAmB,CAAC;cAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;gBAAEN,UAAU,EAAED,IAAI,CAACC,UAAU;gBAAEjC;cAAK,CAAC;YAC5D,CAAC,CAAC;YACF,MAAMwC,EAAE,GAAG,MAAMN,EAAE,CAACrB,IAAI,CAAC,CAAC;YAC1B,IAAI,CAACqB,EAAE,CAACO,EAAE,IAAI,CAACD,EAAE,CAACE,MAAM,EAAE,MAAM,IAAIC,KAAK,CAACH,EAAE,CAACI,MAAM,IAAI,qBAAqB,CAAC;YAC7EjD,QAAQ,CAAC6C,EAAE,CAACE,MAAM,CAAC;YACnB,IAAIF,EAAE,CAACK,IAAI,EAAEjD,OAAO,CAAC4C,EAAE,CAACK,IAAI,CAAC;YAC7BnB,MAAM,CAACoB,QAAQ,CAACC,IAAI,GAAG9C,iBAAiB;UAC1C,CAAC,CAAC,OAAO+C,CAAM,EAAE;YACfxC,QAAQ,CAACwC,CAAC,CAACC,OAAO,IAAI,qBAAqB,CAAC;UAC9C;QACF;MACF,CAAC,CAAC;MACFvB,MAAM,CAACC,MAAM,CAACE,QAAQ,CAACV,EAAE,CAAC+B,YAAY,CAAC9C,MAAM,CAACwB,OAAO,EAAE;QACrDuB,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,OAAO;QACblD,IAAI;QACJmD,KAAK,EAAE;MACT,CAAC,CAAC;IACJ;IACA,MAAMC,CAAC,GAAGC,WAAW,CAAC,MAAM;MAC1B,IAAI7B,MAAM,CAACC,MAAM,EAAE;QACjB6B,aAAa,CAACF,CAAC,CAAC;QAChB7B,IAAI,CAAC,CAAC;MACR;IACF,CAAC,EAAE,GAAG,CAAC;IACP,OAAO,MAAM+B,aAAa,CAACF,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACjD,QAAQ,EAAEL,IAAI,EAAEC,iBAAiB,EAAEC,IAAI,CAAC,CAAC;EAE7C,oBACEJ,OAAA;IAAA2D,QAAA,gBACE3D,OAAA;MAAK4D,GAAG,EAAEtD;IAAO;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACnBvD,KAAK,iBAAIT,OAAA;MAAKiE,SAAS,EAAC,2BAA2B;MAAAN,QAAA,EAAElD;IAAK;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAAC3D,EAAA,CA9EWJ,YAA6B;AAAAiE,EAAA,GAA7BjE,YAA6B;AAgF1C,eAAeA,YAAY;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}