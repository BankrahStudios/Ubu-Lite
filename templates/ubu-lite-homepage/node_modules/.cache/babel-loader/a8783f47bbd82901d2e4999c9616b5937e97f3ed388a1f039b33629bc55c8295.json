{"ast":null,"code":"const API_BASE = '/api';\nasync function request(path, init = {}, token) {\n  const headers = init.headers || {};\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  const resp = await fetch(API_BASE + path, {\n    ...init,\n    headers\n  });\n  if (!resp.ok) {\n    const text = await resp.text();\n    throw new Error(text || `Request failed: ${resp.status}`);\n  }\n  const ct = resp.headers.get('content-type') || '';\n  return ct.includes('application/json') ? resp.json() : resp.text();\n}\nexport async function postJSON(path, body, token) {\n  return request(path, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }, token);\n}\nexport async function getJSON(path, token) {\n  return request(path, {\n    method: 'GET'\n  }, token);\n}\nexport async function patchJSON(path, body, token) {\n  return request(path, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  }, token);\n}\n\n// Domain helpers\n\nexport const api = {\n  // Auth\n  register: payload => postJSON('/auth/register/', payload),\n  login: payload => postJSON('/auth/login/', payload),\n  // Creatives & Services\n  listCreatives: () => getJSON('/creatives/'),\n  getCreative: id => getJSON(`/creatives/${id}/`),\n  listServices: () => getJSON('/services/'),\n  getService: id => getJSON(`/services/${id}/`),\n  // Bookings\n  createBooking: (payload, token) => postJSON('/bookings/', payload, token),\n  getBooking: (id, token) => getJSON(`/bookings/${id}/`, token),\n  updateBooking: (id, payload, token) => patchJSON(`/bookings/${id}/`, payload, token),\n  listBookings: token => getJSON('/bookings/', token),\n  approveBooking: (id, token) => postJSON(`/bookings/${id}/approve/`, {}, token),\n  declineBooking: (id, token) => postJSON(`/bookings/${id}/decline/`, {}, token),\n  scheduleBooking: (id, payload, token) => postJSON(`/bookings/${id}/schedule/`, payload, token),\n  // Messages\n  listMessages: (bookingId, token) => getJSON(`/messages/${bookingId}/`, token),\n  sendMessage: (bookingId, payload, token) => postJSON(`/messages/${bookingId}/`, payload, token),\n  // Portfolio\n  listPortfolio: token => getJSON('/portfolio/', token),\n  createPortfolioItem: (form, token) => {\n    return request('/portfolio/', {\n      method: 'POST',\n      body: form\n    }, token);\n  },\n  deletePortfolioItem: (id, token) => request(`/portfolio/${id}/`, {\n    method: 'DELETE'\n  }, token),\n  // Services (creative-owned)\n  listOwnServices: token => getJSON('/services/', token),\n  createService: (payload, token) => postJSON('/services/', payload, token),\n  updateService: (id, payload, token) => patchJSON(`/services/${id}/`, payload, token),\n  deleteService: (id, token) => request(`/services/${id}/`, {\n    method: 'DELETE'\n  }, token),\n  // Categories\n  listCategories: () => getJSON('/categories/'),\n  // Current creative profile\n  getMyProfile: token => getJSON('/creatives/me/', token),\n  updateMyProfile: (payload, token) => patchJSON('/creatives/me/', payload, token),\n  updateMyProfileMultipart: (form, token) => request('/creatives/me/', {\n    method: 'PATCH',\n    body: form\n  }, token),\n  // Wallet & Escrow\n  getWallet: token => getJSON('/wallet/', token),\n  listEscrows: token => getJSON('/escrows/', token),\n  clientFulfill: (escrowId, token) => postJSON(`/escrows/${escrowId}/client_fulfill/`, {}, token),\n  creativeFulfill: (escrowId, token) => postJSON(`/escrows/${escrowId}/creative_fulfill/`, {}, token),\n  createDemoFundedOrder: token => postJSON('/demo/create-funded-order/', {}, token),\n  demoWithdraw: (amount, token) => postJSON('/demo/withdraw/', amount ? {\n    amount\n  } : {}, token)\n};","map":{"version":3,"names":["API_BASE","request","path","init","token","headers","resp","fetch","ok","text","Error","status","ct","get","includes","json","postJSON","body","method","JSON","stringify","getJSON","patchJSON","api","register","payload","login","listCreatives","getCreative","id","listServices","getService","createBooking","getBooking","updateBooking","listBookings","approveBooking","declineBooking","scheduleBooking","listMessages","bookingId","sendMessage","listPortfolio","createPortfolioItem","form","deletePortfolioItem","listOwnServices","createService","updateService","deleteService","listCategories","getMyProfile","updateMyProfile","updateMyProfileMultipart","getWallet","listEscrows","clientFulfill","escrowId","creativeFulfill","createDemoFundedOrder","demoWithdraw","amount"],"sources":["C:/Users/Kojos/OneDrive/Desktop/Ubu-Lite/templates/ubu-lite-homepage/src/api.ts"],"sourcesContent":["const API_BASE = '/api';\n\ntype Token = string | undefined;\n\nasync function request(path: string, init: RequestInit = {}, token?: Token) {\n  const headers: Record<string, string> = (init.headers as any) || {};\n  if (token) headers['Authorization'] = `Bearer ${token}`;\n  const resp = await fetch(API_BASE + path, { ...init, headers });\n  if (!resp.ok) {\n    const text = await resp.text();\n    throw new Error(text || `Request failed: ${resp.status}`);\n  }\n  const ct = resp.headers.get('content-type') || '';\n  return ct.includes('application/json') ? resp.json() : resp.text();\n}\n\nexport async function postJSON(path: string, body: any, token?: Token) {\n  return request(path, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body)\n  }, token);\n}\n\nexport async function getJSON(path: string, token?: Token) {\n  return request(path, { method: 'GET' }, token);\n}\n\nexport async function patchJSON(path: string, body: any, token?: Token) {\n  return request(path, {\n    method: 'PATCH',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(body)\n  }, token);\n}\n\n// Domain helpers\nexport type LoginResp = { access: string; refresh?: string; user?: any };\nexport type UserRole = 'creative' | 'client' | 'admin';\n\nexport const api = {\n  // Auth\n  register: (payload: { username: string; email?: string; password: string; role: UserRole }) =>\n    postJSON('/auth/register/', payload),\n  login: (payload: { username: string; password: string }) =>\n    postJSON('/auth/login/', payload) as Promise<LoginResp>,\n\n  // Creatives & Services\n  listCreatives: () => getJSON('/creatives/'),\n  getCreative: (id: number | string) => getJSON(`/creatives/${id}/`),\n  listServices: () => getJSON('/services/'),\n  getService: (id: number | string) => getJSON(`/services/${id}/`),\n\n  // Bookings\n  createBooking: (payload: any, token: string) => postJSON('/bookings/', payload, token),\n  getBooking: (id: number | string, token: string) => getJSON(`/bookings/${id}/`, token),\n  updateBooking: (id: number | string, payload: any, token: string) => patchJSON(`/bookings/${id}/`, payload, token),\n  listBookings: (token: string) => getJSON('/bookings/', token),\n  approveBooking: (id: number | string, token: string) => postJSON(`/bookings/${id}/approve/`, {}, token),\n  declineBooking: (id: number | string, token: string) => postJSON(`/bookings/${id}/decline/`, {}, token),\n  scheduleBooking: (id: number | string, payload: any, token: string) => postJSON(`/bookings/${id}/schedule/`, payload, token),\n\n  // Messages\n  listMessages: (bookingId: number | string, token: string) => getJSON(`/messages/${bookingId}/`, token),\n  sendMessage: (bookingId: number | string, payload: any, token: string) => postJSON(`/messages/${bookingId}/`, payload, token),\n\n  // Portfolio\n  listPortfolio: (token: string) => getJSON('/portfolio/', token),\n  createPortfolioItem: (form: FormData, token: string) => {\n    return request('/portfolio/', { method: 'POST', body: form }, token);\n  },\n  deletePortfolioItem: (id: number | string, token: string) => request(`/portfolio/${id}/`, { method: 'DELETE' }, token),\n\n  // Services (creative-owned)\n  listOwnServices: (token: string) => getJSON('/services/', token),\n  createService: (payload: any, token: string) => postJSON('/services/', payload, token),\n  updateService: (id: number | string, payload: any, token: string) => patchJSON(`/services/${id}/`, payload, token),\n  deleteService: (id: number | string, token: string) => request(`/services/${id}/`, { method: 'DELETE' }, token),\n\n  // Categories\n  listCategories: () => getJSON('/categories/'),\n\n  // Current creative profile\n  getMyProfile: (token: string) => getJSON('/creatives/me/', token),\n  updateMyProfile: (payload: any, token: string) => patchJSON('/creatives/me/', payload, token),\n  updateMyProfileMultipart: (form: FormData, token: string) => request('/creatives/me/', { method: 'PATCH', body: form }, token),\n\n  // Wallet & Escrow\n  getWallet: (token: string) => getJSON('/wallet/', token),\n  listEscrows: (token: string) => getJSON('/escrows/', token),\n  clientFulfill: (escrowId: number | string, token: string) => postJSON(`/escrows/${escrowId}/client_fulfill/`, {}, token),\n  creativeFulfill: (escrowId: number | string, token: string) => postJSON(`/escrows/${escrowId}/creative_fulfill/`, {}, token),\n  createDemoFundedOrder: (token: string) => postJSON('/demo/create-funded-order/', {}, token),\n  demoWithdraw: (amount: number | null, token: string) => postJSON('/demo/withdraw/', amount ? { amount } : {}, token),\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAM;AAIvB,eAAeC,OAAOA,CAACC,IAAY,EAAEC,IAAiB,GAAG,CAAC,CAAC,EAAEC,KAAa,EAAE;EAC1E,MAAMC,OAA+B,GAAIF,IAAI,CAACE,OAAO,IAAY,CAAC,CAAC;EACnE,IAAID,KAAK,EAAEC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUD,KAAK,EAAE;EACvD,MAAME,IAAI,GAAG,MAAMC,KAAK,CAACP,QAAQ,GAAGE,IAAI,EAAE;IAAE,GAAGC,IAAI;IAAEE;EAAQ,CAAC,CAAC;EAC/D,IAAI,CAACC,IAAI,CAACE,EAAE,EAAE;IACZ,MAAMC,IAAI,GAAG,MAAMH,IAAI,CAACG,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACD,IAAI,IAAI,mBAAmBH,IAAI,CAACK,MAAM,EAAE,CAAC;EAC3D;EACA,MAAMC,EAAE,GAAGN,IAAI,CAACD,OAAO,CAACQ,GAAG,CAAC,cAAc,CAAC,IAAI,EAAE;EACjD,OAAOD,EAAE,CAACE,QAAQ,CAAC,kBAAkB,CAAC,GAAGR,IAAI,CAACS,IAAI,CAAC,CAAC,GAAGT,IAAI,CAACG,IAAI,CAAC,CAAC;AACpE;AAEA,OAAO,eAAeO,QAAQA,CAACd,IAAY,EAAEe,IAAS,EAAEb,KAAa,EAAE;EACrE,OAAOH,OAAO,CAACC,IAAI,EAAE;IACnBgB,MAAM,EAAE,MAAM;IACdb,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,EAAEb,KAAK,CAAC;AACX;AAEA,OAAO,eAAeiB,OAAOA,CAACnB,IAAY,EAAEE,KAAa,EAAE;EACzD,OAAOH,OAAO,CAACC,IAAI,EAAE;IAAEgB,MAAM,EAAE;EAAM,CAAC,EAAEd,KAAK,CAAC;AAChD;AAEA,OAAO,eAAekB,SAASA,CAACpB,IAAY,EAAEe,IAAS,EAAEb,KAAa,EAAE;EACtE,OAAOH,OAAO,CAACC,IAAI,EAAE;IACnBgB,MAAM,EAAE,OAAO;IACfb,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CY,IAAI,EAAEE,IAAI,CAACC,SAAS,CAACH,IAAI;EAC3B,CAAC,EAAEb,KAAK,CAAC;AACX;;AAEA;;AAIA,OAAO,MAAMmB,GAAG,GAAG;EACjB;EACAC,QAAQ,EAAGC,OAA+E,IACxFT,QAAQ,CAAC,iBAAiB,EAAES,OAAO,CAAC;EACtCC,KAAK,EAAGD,OAA+C,IACrDT,QAAQ,CAAC,cAAc,EAAES,OAAO,CAAuB;EAEzD;EACAE,aAAa,EAAEA,CAAA,KAAMN,OAAO,CAAC,aAAa,CAAC;EAC3CO,WAAW,EAAGC,EAAmB,IAAKR,OAAO,CAAC,cAAcQ,EAAE,GAAG,CAAC;EAClEC,YAAY,EAAEA,CAAA,KAAMT,OAAO,CAAC,YAAY,CAAC;EACzCU,UAAU,EAAGF,EAAmB,IAAKR,OAAO,CAAC,aAAaQ,EAAE,GAAG,CAAC;EAEhE;EACAG,aAAa,EAAEA,CAACP,OAAY,EAAErB,KAAa,KAAKY,QAAQ,CAAC,YAAY,EAAES,OAAO,EAAErB,KAAK,CAAC;EACtF6B,UAAU,EAAEA,CAACJ,EAAmB,EAAEzB,KAAa,KAAKiB,OAAO,CAAC,aAAaQ,EAAE,GAAG,EAAEzB,KAAK,CAAC;EACtF8B,aAAa,EAAEA,CAACL,EAAmB,EAAEJ,OAAY,EAAErB,KAAa,KAAKkB,SAAS,CAAC,aAAaO,EAAE,GAAG,EAAEJ,OAAO,EAAErB,KAAK,CAAC;EAClH+B,YAAY,EAAG/B,KAAa,IAAKiB,OAAO,CAAC,YAAY,EAAEjB,KAAK,CAAC;EAC7DgC,cAAc,EAAEA,CAACP,EAAmB,EAAEzB,KAAa,KAAKY,QAAQ,CAAC,aAAaa,EAAE,WAAW,EAAE,CAAC,CAAC,EAAEzB,KAAK,CAAC;EACvGiC,cAAc,EAAEA,CAACR,EAAmB,EAAEzB,KAAa,KAAKY,QAAQ,CAAC,aAAaa,EAAE,WAAW,EAAE,CAAC,CAAC,EAAEzB,KAAK,CAAC;EACvGkC,eAAe,EAAEA,CAACT,EAAmB,EAAEJ,OAAY,EAAErB,KAAa,KAAKY,QAAQ,CAAC,aAAaa,EAAE,YAAY,EAAEJ,OAAO,EAAErB,KAAK,CAAC;EAE5H;EACAmC,YAAY,EAAEA,CAACC,SAA0B,EAAEpC,KAAa,KAAKiB,OAAO,CAAC,aAAamB,SAAS,GAAG,EAAEpC,KAAK,CAAC;EACtGqC,WAAW,EAAEA,CAACD,SAA0B,EAAEf,OAAY,EAAErB,KAAa,KAAKY,QAAQ,CAAC,aAAawB,SAAS,GAAG,EAAEf,OAAO,EAAErB,KAAK,CAAC;EAE7H;EACAsC,aAAa,EAAGtC,KAAa,IAAKiB,OAAO,CAAC,aAAa,EAAEjB,KAAK,CAAC;EAC/DuC,mBAAmB,EAAEA,CAACC,IAAc,EAAExC,KAAa,KAAK;IACtD,OAAOH,OAAO,CAAC,aAAa,EAAE;MAAEiB,MAAM,EAAE,MAAM;MAAED,IAAI,EAAE2B;IAAK,CAAC,EAAExC,KAAK,CAAC;EACtE,CAAC;EACDyC,mBAAmB,EAAEA,CAAChB,EAAmB,EAAEzB,KAAa,KAAKH,OAAO,CAAC,cAAc4B,EAAE,GAAG,EAAE;IAAEX,MAAM,EAAE;EAAS,CAAC,EAAEd,KAAK,CAAC;EAEtH;EACA0C,eAAe,EAAG1C,KAAa,IAAKiB,OAAO,CAAC,YAAY,EAAEjB,KAAK,CAAC;EAChE2C,aAAa,EAAEA,CAACtB,OAAY,EAAErB,KAAa,KAAKY,QAAQ,CAAC,YAAY,EAAES,OAAO,EAAErB,KAAK,CAAC;EACtF4C,aAAa,EAAEA,CAACnB,EAAmB,EAAEJ,OAAY,EAAErB,KAAa,KAAKkB,SAAS,CAAC,aAAaO,EAAE,GAAG,EAAEJ,OAAO,EAAErB,KAAK,CAAC;EAClH6C,aAAa,EAAEA,CAACpB,EAAmB,EAAEzB,KAAa,KAAKH,OAAO,CAAC,aAAa4B,EAAE,GAAG,EAAE;IAAEX,MAAM,EAAE;EAAS,CAAC,EAAEd,KAAK,CAAC;EAE/G;EACA8C,cAAc,EAAEA,CAAA,KAAM7B,OAAO,CAAC,cAAc,CAAC;EAE7C;EACA8B,YAAY,EAAG/C,KAAa,IAAKiB,OAAO,CAAC,gBAAgB,EAAEjB,KAAK,CAAC;EACjEgD,eAAe,EAAEA,CAAC3B,OAAY,EAAErB,KAAa,KAAKkB,SAAS,CAAC,gBAAgB,EAAEG,OAAO,EAAErB,KAAK,CAAC;EAC7FiD,wBAAwB,EAAEA,CAACT,IAAc,EAAExC,KAAa,KAAKH,OAAO,CAAC,gBAAgB,EAAE;IAAEiB,MAAM,EAAE,OAAO;IAAED,IAAI,EAAE2B;EAAK,CAAC,EAAExC,KAAK,CAAC;EAE9H;EACAkD,SAAS,EAAGlD,KAAa,IAAKiB,OAAO,CAAC,UAAU,EAAEjB,KAAK,CAAC;EACxDmD,WAAW,EAAGnD,KAAa,IAAKiB,OAAO,CAAC,WAAW,EAAEjB,KAAK,CAAC;EAC3DoD,aAAa,EAAEA,CAACC,QAAyB,EAAErD,KAAa,KAAKY,QAAQ,CAAC,YAAYyC,QAAQ,kBAAkB,EAAE,CAAC,CAAC,EAAErD,KAAK,CAAC;EACxHsD,eAAe,EAAEA,CAACD,QAAyB,EAAErD,KAAa,KAAKY,QAAQ,CAAC,YAAYyC,QAAQ,oBAAoB,EAAE,CAAC,CAAC,EAAErD,KAAK,CAAC;EAC5HuD,qBAAqB,EAAGvD,KAAa,IAAKY,QAAQ,CAAC,4BAA4B,EAAE,CAAC,CAAC,EAAEZ,KAAK,CAAC;EAC3FwD,YAAY,EAAEA,CAACC,MAAqB,EAAEzD,KAAa,KAAKY,QAAQ,CAAC,iBAAiB,EAAE6C,MAAM,GAAG;IAAEA;EAAO,CAAC,GAAG,CAAC,CAAC,EAAEzD,KAAK;AACrH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}